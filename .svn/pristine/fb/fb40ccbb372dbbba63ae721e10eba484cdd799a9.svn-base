package com.brb.btb.controller;

import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Properties;

import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

import com.brb.btb.service.BtbService;
import com.brb.brbcom.common.collections.BrbMap;
import com.brb.brbcom.common.util.RequestParameterUtil;
/**
 * 
 * @author back
 *
 */
@Controller
public class BtbController {
	
	@SuppressWarnings("unused")
	private static final Logger logger = LoggerFactory.getLogger(BtbController.class);
	
	
	@Autowired
	BtbService btbService;

	
	/**
	 * 관리자 목록 페이지 호출
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("btb/btbList")
	public ModelAndView btbList() {
		ModelAndView mav = new ModelAndView();
		mav.setViewName("btb/btbList") ;
		return mav;
	}
	
	
	/**
	 * 관리자 목록 조회
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "btb/btbListProc" , method = RequestMethod.POST)
	public ModelAndView adminListProc(HttpServletRequest request,
			HttpServletResponse response,
			ModelMap modelMap) throws Exception {
		
		logger.debug("############   btbListProc  ################");
		ModelAndView view = new ModelAndView("btb/btbList");
		BrbMap<Object, Object> dMap	= RequestParameterUtil.getParameterMap(request);
		int page = Integer.parseInt(dMap.get("page").toString());
		int page_cnt = Integer.parseInt(dMap.get("page_cnt").toString());
		int begin_index = (page-1)* page_cnt;
		dMap.put("begin_index", begin_index);
		dMap.put("page_cnt", page_cnt);
		dMap.put("page", page);
		dMap.put("sch_flag", "Y");

		BrbMap<Object, Object> rMap = null;
		BrbMap<Object, Object> cntMap = null;
		BrbMap<Object, Object> btbMap = null;
		try{
			rMap = btbService.getBtbList(dMap);
			cntMap = btbService.getBtbListCnt(dMap);
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
		btbMap = (BrbMap<Object, Object>)cntMap.get("btbListCnt");
		int total_cnt = Integer.parseInt(btbMap.get("CNT").toString());
		int total_page = (total_cnt-1)/page_cnt+1;
		logger.debug("total_page>>>>>>>>>>>"+total_page);
		dMap.put("total_page", total_page);
		
		int virtualNumber = total_cnt - begin_index;
		List list = (List) rMap.get("btbList");
		if(list.size()>0) {
			for(int i=0; i<list.size(); i++) {
				btbMap = (BrbMap<Object, Object>) list.get(i);
				btbMap.put("ROWNUM", virtualNumber--);
			}
		}

		view.addObject("rMap", rMap);
		view.addObject("dMap", dMap);

		return view;
	}
	
	/**
	 * BTB 사이트 신규추가 페이지 호출
	 * @param param
	 * @return
	 * @throws Exception
	 */	
	@RequestMapping("btb/btbAdd")
	public ModelAndView btbAdd() {
		ModelAndView mav = new ModelAndView();
		BrbMap<Object, Object> rMap = null;
		try{
			rMap = btbService.getBtbSq();
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
		mav.setViewName("btb/btbAdd") ;
		mav.addObject("rMap", rMap);
		return mav;
	}	
	
	/**
	 * 관리자 신규생성
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "btb/btbAddProc" , method = RequestMethod.POST)
	public ModelAndView btbAddProc(HttpServletRequest request,
			HttpServletResponse response,
			ModelMap modelMap) throws Exception {
		
		logger.debug("############   btbAddProc  ################");
		ModelAndView view = new ModelAndView("jsonView");
		BrbMap<Object, Object> dMap	= RequestParameterUtil.getParameterMap(request);
		
		/* 다음  항목 확인필요*/
		// 중복인거 같은데...
		dMap.put("create_adm_sq", 111); //등록 관리자명
		dMap.put("reg_adm_sq", 111); //등록 관리자고유번호
		
		int cnt = 0;
		try{
			cnt = btbService.addBtb(dMap);
		} catch(Exception e){
			e.printStackTrace();
		}
		view.addObject("cnt", cnt);
		
		return view;
	
	}	
	
	/**
	 * 상세보기 화면
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "btb/btbView" , method = RequestMethod.POST)
	public ModelAndView btbView(HttpServletRequest request,
			HttpServletResponse response,
			ModelMap modelMap) throws Exception {
		
		logger.debug("############   btbView  ################");
		ModelAndView view = new ModelAndView("btb/btbView");
		BrbMap<Object, Object> dMap	= RequestParameterUtil.getParameterMap(request);
		BrbMap<Object, Object> rMap = null;
		try{
			rMap = btbService.getBtb(dMap);
		} catch(Exception e){
			e.printStackTrace();
		}

		view.addObject("rMap", rMap);

		return view;
	}	
	
	/**
	 * B2B사이트 수정
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "btb/btbViewProc" , method = RequestMethod.POST)
	public ModelAndView btbViewProc(HttpServletRequest request,
			HttpServletResponse response,
			ModelMap modelMap) throws Exception {
		
		logger.debug("############   btbViewProc  ################");
		ModelAndView view = new ModelAndView("jsonView");
		BrbMap<Object, Object> dMap	= RequestParameterUtil.getParameterMap(request);
		dMap.put("upt_adm_sq", 111); //수정 관리자고유번호
		int cnt = 0;
		try{
			cnt = btbService.modBtb(dMap);
		} catch(Exception e){
			e.printStackTrace();
		}

		view.addObject("cnt", cnt);

		return view;
	}	
	
	/**
	 * 관리자 삭제 팝업 호출
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "btb/btbDel" , method = RequestMethod.GET)
	public ModelAndView btbDel(HttpServletRequest request,
			HttpServletResponse response,
			ModelMap modelMap) throws Exception {
		
		logger.debug("############   btbDel  ################");
		ModelAndView view = new ModelAndView("btb/btbDel");
		BrbMap<Object, Object> dMap	= RequestParameterUtil.getParameterMap(request);
		view.addObject("dMap", dMap);

		return view;
	}	
	
	/**
	 * 관리자 삭제
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "btb/btbDelProc" , method = RequestMethod.POST)
	public ModelAndView btbDelProc(HttpServletRequest request,
			HttpServletResponse response,
			ModelMap modelMap) throws Exception {
		
		logger.debug("############   btbDelProc  ################");
		ModelAndView view = new ModelAndView("jsonView");
		BrbMap<Object, Object> dMap	= RequestParameterUtil.getParameterMap(request);
		dMap.put("del_adm_sq", 111); //삭제 관리자고유번호
		
		int cnt = 0;
		try{
			cnt = btbService.delBtb(dMap);
		} catch(Exception e){
			e.printStackTrace();
		}

		view.addObject("cnt", cnt);
		
		return view;
	}
	
	/**
	 * B2B 관리자 목록 페이지 호출
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("btb/btbAdminList")
	public ModelAndView btbAdminList() {
		ModelAndView mav = new ModelAndView();
		mav.setViewName("btb/btbAdminList") ;
		return mav;
	}	
	

	/**
	 * B2B 관리자 목록 조회
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "btb/btbAdminListProc" , method = RequestMethod.POST)
	public ModelAndView btbAdminListProc(HttpServletRequest request,
			HttpServletResponse response,
			ModelMap modelMap) throws Exception {
		
		logger.debug("############   btbAdminListProc  ################");
		ModelAndView view = new ModelAndView("btb/btbAdminList");
		BrbMap<Object, Object> dMap	= RequestParameterUtil.getParameterMap(request);
		int page = Integer.parseInt(dMap.get("page").toString());
		int page_cnt = Integer.parseInt(dMap.get("page_cnt").toString());
		int begin_index = (page-1)* page_cnt;
		dMap.put("begin_index", begin_index);
		dMap.put("page_cnt", page_cnt);
		dMap.put("page", page);
		dMap.put("sch_flag", "Y");

		BrbMap<Object, Object> rMap = null;
		BrbMap<Object, Object> cntMap = null;
		BrbMap<Object, Object> adminMap = null;
		try{
			rMap = btbService.getAdminList(dMap);
			cntMap = btbService.getAdminListCnt(dMap);
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
		adminMap = (BrbMap<Object, Object>)cntMap.get("adminListCnt");
		int total_cnt = Integer.parseInt(adminMap.get("CNT").toString());
		int total_page = (total_cnt-1)/page_cnt+1;
		logger.debug("total_page>>>>>>>>>>>"+total_page);
		dMap.put("total_page", total_page);
		
		int virtualNumber = total_cnt - begin_index;
		List list = (List) rMap.get("adminList");
		if(list.size()>0) {
			for(int i=0; i<list.size(); i++) {
				adminMap = (BrbMap<Object, Object>) list.get(i);
				adminMap.put("ROWNUM", virtualNumber--);
			}
		}

		view.addObject("rMap", rMap);
		view.addObject("dMap", dMap);

		return view;
	}
	
	/**
	 * B2B 관리자 활동로그 페이지 호출
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("btb/btbAdminLogList")
	public ModelAndView adminLogList() {
		ModelAndView mav = new ModelAndView();
		mav.setViewName("btb/btbAdminLogList") ;
		return mav;
	}		
	
	/**
	 * 관리자 활동로그 조회
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "btb/btbAdminLogListProc" , method = RequestMethod.POST)
	public ModelAndView adminLogListProc(HttpServletRequest request,
			HttpServletResponse response,
			ModelMap modelMap) throws Exception {
		
		logger.debug("############   btbAdminLogListProc  ################");
		ModelAndView view = new ModelAndView("btb/btbAdminLogList");
		BrbMap<Object, Object> dMap	= RequestParameterUtil.getParameterMap(request);
		int page = Integer.parseInt(dMap.get("page").toString());
		int page_cnt = Integer.parseInt(dMap.get("page_cnt").toString());
		int begin_index = (page-1)* page_cnt;
		dMap.put("begin_index", begin_index);
		dMap.put("page_cnt", page_cnt);
		dMap.put("page", page);
		dMap.put("sch_flag", "Y");

		BrbMap<Object, Object> rMap = null;
		BrbMap<Object, Object> cntMap = null;
		BrbMap<Object, Object> adminMap = null;
		try{
			rMap = btbService.getAdminLogList(dMap);
			cntMap = btbService.getAdminLogListCnt(dMap);
			
		} catch(Exception e){
			e.printStackTrace();
		}
		
		adminMap = (BrbMap<Object, Object>)cntMap.get("adminLogListCnt");
		int total_cnt = Integer.parseInt(adminMap.get("CNT").toString());
		int total_page = (total_cnt-1)/page_cnt+1;
		logger.debug("total_page>>>>>>>>>>>"+total_page);
		dMap.put("total_page", total_page);
		
		int virtualNumber = total_cnt - begin_index;
		List list = (List) rMap.get("adminLogList");
		if(list.size()>0) {
			for(int i=0; i<list.size(); i++) {
				adminMap = (BrbMap<Object, Object>) list.get(i);
				adminMap.put("ROWNUM", virtualNumber--);
			}
		}

		view.addObject("rMap", rMap);
		view.addObject("dMap", dMap);

		return view;
	}	
	
	/**
	 * B2B 관리자 신규생성 페이지 호출
	 * @param param
	 * @return
	 * @throws Exception
	 */	
	@RequestMapping("btb/btbAdminAdd")
	public ModelAndView adminAdd() {
		ModelAndView mav = new ModelAndView();
		mav.setViewName("btb/btbAdminAdd") ;
		return mav;
	}		
	
	/**
	 * B2B 관리자 신규생성
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "btb/btbAdminAddProc" , method = RequestMethod.POST)
	public ModelAndView btbAdminAddProc(HttpServletRequest request,
			HttpServletResponse response,
			ModelMap modelMap) throws Exception {
		
		logger.debug("############   btbAdminAddProc  ################");
		ModelAndView view = new ModelAndView("jsonView");
		BrbMap<Object, Object> dMap	= RequestParameterUtil.getParameterMap(request);
		
		/* 다음  항목 확인필요*/
		dMap.put("stat", "A"); // 상태
		dMap.put("adm_class", 1); // 관리자 클래스
	//	dMap.put("btbs_sq", 111); //BTBSITE 고유번호
		dMap.put("reg_adm_nm", "관리자"); //등록 관리자명
		dMap.put("reg_adm_sq", 111); //등록 관리자고유번호
	//	dMap.put("ADM_SQ", 0); 
		
		int cnt = 0;
		try{
			cnt = btbService.addAdmin(dMap);
		} catch(Exception e){
			e.printStackTrace();
		}
		view.addObject("cnt", cnt);
		
		return view;
	
	}	
	
	/**
	 * 상세보기 화면
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "btb/btbAdminView" , method = RequestMethod.POST)
	public ModelAndView btbAdminView(HttpServletRequest request,
			HttpServletResponse response,
			ModelMap modelMap) throws Exception {
		
		logger.debug("############   btbAdminView  ################");
		ModelAndView view = new ModelAndView("btb/btbAdminView");
		BrbMap<Object, Object> dMap	= RequestParameterUtil.getParameterMap(request);
		BrbMap<Object, Object> rMap = null;
		try{
			rMap = btbService.getAdmin(dMap);
		} catch(Exception e){
			e.printStackTrace();
		}

		view.addObject("rMap", rMap);

		return view;
	}	
	
	/**
	 * 관리자 수정
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "btb/btbAdminViewProc" , method = RequestMethod.POST)
	public ModelAndView btbAdminViewProc(HttpServletRequest request,
			HttpServletResponse response,
			ModelMap modelMap) throws Exception {
		
		logger.debug("############   btbAdminViewProc  ################");
		ModelAndView view = new ModelAndView("jsonView");
		BrbMap<Object, Object> dMap	= RequestParameterUtil.getParameterMap(request);
		dMap.put("upt_adm_sq", 111); //수정 관리자고유번호
		int cnt = 0;
		try{
			cnt = btbService.modAdmin(dMap);
		} catch(Exception e){
			e.printStackTrace();
		}

		view.addObject("cnt", cnt);

		return view;
	}	
	
	/**
	 * 관리자 삭제 팝업 호출
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "btb/btbAdminDel" , method = RequestMethod.GET)
	public ModelAndView btbAdminDel(HttpServletRequest request,
			HttpServletResponse response,
			ModelMap modelMap) throws Exception {
		
		logger.debug("############   btbAdminDel  ################");
		ModelAndView view = new ModelAndView("btb/btbAdminDel");
		BrbMap<Object, Object> dMap	= RequestParameterUtil.getParameterMap(request);
		view.addObject("dMap", dMap);

		return view;
	}	
	
	/**
	 * 관리자 삭제
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "btb/btbAdminDelProc" , method = RequestMethod.POST)
	public ModelAndView btbAdminDelProc(HttpServletRequest request,
			HttpServletResponse response,
			ModelMap modelMap) throws Exception {
		
		logger.debug("############   btbAdminDelProc  ################");
		ModelAndView view = new ModelAndView("jsonView");
		BrbMap<Object, Object> dMap	= RequestParameterUtil.getParameterMap(request);
		dMap.put("del_adm_sq", 111); //삭제 관리자고유번호
		
		int cnt = 0;
		try{
			cnt = btbService.delAdmin(dMap);
		} catch(Exception e){
			e.printStackTrace();
		}

		view.addObject("cnt", cnt);
		
		return view;
	}	
	


}
