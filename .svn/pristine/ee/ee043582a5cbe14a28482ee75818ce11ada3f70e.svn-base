package com.brb.main.service;

import java.util.List;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.stereotype.Service;

import com.brb.brbcom.common.collections.BrbMap;
import com.brb.main.dao.MainDao;


@Service("MainService")
public class MainServiceImpl implements MainService{

	@SuppressWarnings("unused")
	private static final Logger logger = LoggerFactory.getLogger(MainServiceImpl.class);
	
	@Autowired
	MainDao mainDao;

	@SuppressWarnings({ "unchecked", "rawtypes" })
	@Override
	public List<BrbMap> getMemList(BrbMap<Object, Object> fMap) throws DataAccessException {
		return mainDao.getMemList(fMap);
	}

	@SuppressWarnings("rawtypes")
	@Override
	public BrbMap getMemListTotal(BrbMap<Object, Object> fMap) throws DataAccessException {
		return mainDao.getMemListTotal(fMap);
	}
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	@Override
	public List<BrbMap> getAsList(BrbMap<Object, Object> fMap) throws DataAccessException {
		return mainDao.getAsList(fMap);
	}

	@SuppressWarnings("rawtypes")
	@Override
	public BrbMap getAsListTotal(BrbMap<Object, Object> fMap) throws DataAccessException {
		return mainDao.getAsListTotal(fMap);
	}
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	@Override
	public List<BrbMap> getQnaList(BrbMap<Object, Object> fMap) throws DataAccessException {
		return mainDao.getQnaList(fMap);
	}

	@SuppressWarnings("rawtypes")
	@Override
	public BrbMap getQnaListTotal(BrbMap<Object, Object> fMap) throws DataAccessException {
		return mainDao.getQnaListTotal(fMap);
	}
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	@Override
	public List<BrbMap> getappList(BrbMap<Object, Object> fMap) throws DataAccessException {
		return mainDao.getappList(fMap);
	}
	
	@SuppressWarnings({ "unchecked", "rawtypes" })
	@Override
	public List<BrbMap> getmemList(BrbMap<Object, Object> fMap) throws DataAccessException {
		return mainDao.getmemList(fMap);
	}

}