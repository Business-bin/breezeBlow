package com.brb.admin.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.brb.admin.service.AdminService;
import com.brb.brbcom.common.collections.BrbMap;
import com.brb.brbcom.common.util.AES256Util;
import com.brb.brbcom.common.util.RequestParameterUtil;
import com.brb.brbcom.common.util.Util;
import com.brb.common.service.CommonService;
/**
 *
 * @author back
 *
 */
@Controller
public class AdminController {

	@SuppressWarnings("unused")
	private static final Logger logger = LoggerFactory.getLogger(AdminController.class);


	@Autowired
	AdminService adminService;

	@Autowired
	CommonService commonService;

	private static AES256Util aes256 = AES256Util.getInstance();


	/**
	 * 관리자 목록 페이지 호출
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("admin/adminList")
	public ModelAndView adminList(HttpServletRequest request, HttpSession session) {
		ModelAndView mav = new ModelAndView();
		mav.setViewName("admin/adminList");
		BrbMap <Object, Object> pMap = RequestParameterUtil.getParameterMap(request);
		mav.addObject("pMap", pMap);
		return mav;
	}


	/**
	 * 관리자 목록 조회
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@SuppressWarnings({ "unchecked", "rawtypes" })
	@RequestMapping(value = "admin/adminListProc" , method = RequestMethod.POST)
	public ModelAndView adminListProc(HttpServletRequest request,
			HttpServletResponse response,
			ModelMap modelMap) throws Exception {

		ModelAndView view = new ModelAndView("jsonView");
		BrbMap<Object, Object> dMap = RequestParameterUtil.getParameterMap(request);
		Map<String, String> infoMap = new HashMap<String, String>();
		BrbMap<Object, Object> adminMap = null;
		List infoList = null;

		HttpSession session = request.getSession(false);
		String btbs_sq = session.getAttribute("BTBS_SQ").toString();
		dMap.put("btbs_sq", btbs_sq);

		int rowSize = Util.attrParseInt(dMap, "rows");
		int currentPage = Util.attrParseInt(dMap, "page");
		String sidx = dMap.getString("sidx") == "" ? "REG_DTTM" : dMap.getString("sidx");

		if("REG_DTTM".equals(sidx)){
			sidx = "REG_DTTM";
		}
		String sord = dMap.getString("sord");
	    String orderbyColum = sidx.trim() + "  "+sord;
	    dMap.put("orderBy", orderbyColum);
	  	dMap.put("R_PAGE", (currentPage -1) *10 );
	  	dMap.put("R_ROW", rowSize);
		dMap.put("start_dt", dMap.getString("start_dt").replaceAll("-", ""));
		dMap.put("end_dt", dMap.getString("end_dt").replaceAll("-", ""));
		int totalcnt = 0;

		//리스트 조회
		infoList = adminService.getAdminList(dMap);

		//리스트 카운트 조회
		infoMap = adminService.getAdminListCnt(dMap);

		if(null != infoMap ){
			totalcnt  = Integer.parseInt(String.valueOf(infoMap.get("CNT")));
		}
		double dSize = Util.attrParseInt(dMap, "rows");
		double liTotalPage = (double)Math.ceil(totalcnt/dSize) ;

		int begin_index = (currentPage-1)* rowSize;
		int virtualNumber = totalcnt - begin_index;
		if(infoList.size()>0) {
			for(int i=0; i<infoList.size(); i++) {
				adminMap = (BrbMap<Object, Object>) infoList.get(i);
				adminMap.put("ROWNUM", virtualNumber--);
			}
		}

		view.addObject("rows", infoList);
		view.addObject("total", liTotalPage);
		view.addObject("page", currentPage);
		view.addObject("records", totalcnt);
		return view;

	}

	/**
	 * 관리자 신규생성 페이지 호출
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@SuppressWarnings("rawtypes")
	@RequestMapping("admin/adminAdd")
	public ModelAndView adminAdd() {
		ModelAndView mav = new ModelAndView();

		List<BrbMap> hpList = null;
		List<BrbMap> telList = null;

		try{
			hpList = commonService.getHpList();
			telList = commonService.getTelList();
		} catch(Exception e){
			e.printStackTrace();
		}

		mav.setViewName("admin/adminAdd") ;
		mav.addObject("hpList", hpList);
		mav.addObject("telList", telList);

		return mav;
	}

	/**
	 * 관리자 신규생성
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "admin/adminAddProc" , method = RequestMethod.POST)
	public ModelAndView adminAddProc(HttpServletRequest request,
			HttpServletResponse response,
			ModelMap modelMap) throws Exception {

		ModelAndView view = new ModelAndView("jsonView");
		BrbMap<Object, Object> dMap = RequestParameterUtil.getParameterMap(request);
		dMap.put("adm_pwd",aes256.aesEncode(dMap.getString("adm_pwd")));

		HttpSession session = request.getSession(false);
		String bd_user_nm = session.getAttribute("ADM_NM").toString();
		String reg_adm_sq = session.getAttribute("ADM_SQ").toString();
		String adm_class = session.getAttribute("ADM_CLASS").toString();
		String btbs_sq = session.getAttribute("BTBS_SQ").toString();
		String btbs_nm = session.getAttribute("BTBS_NM").toString();
		/* 다음  항목 확인필요*/
		dMap.put("reg_adm_nm", bd_user_nm); //등록 관리자명
		dMap.put("reg_adm_sq", reg_adm_sq); //등록 관리자고유번호
		dMap.put("adm_class", adm_class);
		dMap.put("btbs_sq", btbs_sq);
		dMap.put("btbs_nm", btbs_nm);

		int cnt = 0;
		try{
			cnt = adminService.addAdmin(dMap);
			//action log
	        commonService.addAdminActLog(request);

		} catch(Exception e){
			e.printStackTrace();
		}
		view.addObject("cnt", cnt);

		return view;

	}

	/**
	 * 상세보기 화면
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@SuppressWarnings("rawtypes")
	@RequestMapping(value = "admin/adminView" , method = RequestMethod.POST)
	public ModelAndView adminView(HttpServletRequest request,
			HttpServletResponse response,
			ModelMap modelMap) throws Exception {

		ModelAndView view = new ModelAndView("admin/adminView");
		BrbMap<Object, Object> dMap	= RequestParameterUtil.getParameterMap(request);
		BrbMap<Object, Object> rMap = null;
		List<BrbMap> hpList = null;
		List<BrbMap> telList = null;

		HttpSession session = request.getSession(false);
		String s_adm_email = session.getAttribute("ADM_EMAIL").toString();

		try{
			rMap = adminService.getAdmin(dMap);
			hpList = commonService.getHpList();
			telList = commonService.getTelList();
		} catch(Exception e){
			e.printStackTrace();
		}
		view.addObject("dMap", dMap);
		view.addObject("rMap", rMap);
		view.addObject("hpList", hpList);
		view.addObject("telList", telList);
		view.addObject("s_adm_email", s_adm_email);

		return view;
	}

	/**
	 * 관리자 수정
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "admin/adminViewProc" , method = RequestMethod.POST)
	public ModelAndView adminViewProc(HttpServletRequest request,
			HttpServletResponse response,
			ModelMap modelMap) throws Exception {

		ModelAndView view = new ModelAndView("jsonView");
		BrbMap<Object, Object> dMap	= RequestParameterUtil.getParameterMap(request);

		HttpSession session = request.getSession(false);
		String reg_adm_sq = session.getAttribute("ADM_SQ").toString();
		dMap.put("upt_adm_sq", reg_adm_sq); //수정 관리자고유번호

		int cnt = 0;
		try{
			cnt = adminService.modAdmin(dMap);
			//action log
	        commonService.addAdminActLog(request);
		} catch(Exception e){
			e.printStackTrace();
		}

		view.addObject("cnt", cnt);

		return view;
	}


	/**
	 * 관리자 삭제
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "admin/adminDelProc" , method = RequestMethod.POST)
	public ModelAndView adminDelProc(HttpServletRequest request,
			HttpServletResponse response,
			ModelMap modelMap) throws Exception {

		ModelAndView view = new ModelAndView("jsonView");
		BrbMap<Object, Object> dMap	= RequestParameterUtil.getParameterMap(request);

		HttpSession session = request.getSession(false);
		String reg_adm_sq = session.getAttribute("ADM_SQ").toString();
		String reg_adm_email = session.getAttribute("ADM_SQ").toString();

		dMap.put("del_adm_sq", reg_adm_sq); //삭제 관리자고유번호
		dMap.put("del_adm_email", reg_adm_email);

		int cnt = 0;
		try{
			cnt = adminService.delAdmin(dMap);
			//action log
	        commonService.addAdminActLog(request);
		} catch(Exception e){
			e.printStackTrace();
		}

		view.addObject("cnt", cnt);

		return view;
	}

	/**
	 * 관리자 활동로그 페이지 호출
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping("admin/adminLogList")
	public ModelAndView adminLogList(HttpSession session) {
		ModelAndView mav = new ModelAndView();
		mav.setViewName("admin/adminLogList");
		return mav;
	}


	/**
	 * 관리자 활동로그 조회
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@SuppressWarnings({ "rawtypes", "unchecked" })
	@RequestMapping(value = "admin/adminLogListProc" , method = RequestMethod.POST)
	public ModelAndView adminLogListProc(HttpServletRequest request,
			HttpServletResponse response,
			ModelMap modelMap) throws Exception {

		ModelAndView view = new ModelAndView("jsonView");
		BrbMap<Object, Object> dMap	= RequestParameterUtil.getParameterMap(request);
		Map<String, String> infoMap = new HashMap<String, String>();
		BrbMap<Object, Object> adminMap = null;
		List infoList = null;

		HttpSession session = request.getSession(false);
		String btbs_sq = session.getAttribute("BTBS_SQ").toString();
		dMap.put("btbs_sq", btbs_sq);

		int rowSize = Util.attrParseInt(dMap, "rows");
		int currentPage = Util.attrParseInt(dMap, "page");
		String sidx = dMap.getString("sidx") == "" ? "DTTM" : dMap.getString("sidx");

		if("DTTM".equals(sidx)){
			sidx = "DTTM";
		}
		String sord = dMap.getString("sord");
	    String orderbyColum = sidx.trim() + "  "+sord;
	    dMap.put("orderBy", orderbyColum);
	  	dMap.put("R_PAGE", (currentPage -1) *10 );
	  	dMap.put("R_ROW", rowSize);
		dMap.put("start_dt", dMap.getString("start_dt").replaceAll("-", ""));
		dMap.put("end_dt", dMap.getString("end_dt").replaceAll("-", ""));
		dMap.put("sch_flag", "Y");
		int totalcnt = 0;

		//리스트 조회
		infoList = adminService.getAdminLogList(dMap);

		//리스트 카운트 조회
		infoMap = adminService.getAdminLogListCnt(dMap);



		if(null != infoMap ){
			totalcnt  = Integer.parseInt(infoMap.get("CNT").toString());
		}
		double dSize = Util.attrParseInt(dMap, "rows");
		double liTotalPage = (double)Math.ceil(totalcnt/dSize) ;

		int begin_index = (currentPage-1)* rowSize;
		int virtualNumber = totalcnt - begin_index;
		if(infoList.size()>0) {
			for(int i=0; i<infoList.size(); i++) {
				adminMap = (BrbMap<Object, Object>) infoList.get(i);
				adminMap.put("ROWNUM", virtualNumber--);
			}
		}


		view.addObject("rows", infoList);
		view.addObject("total", liTotalPage);
		view.addObject("page", currentPage);
		view.addObject("records", totalcnt);
		return view;

	}

	/**
	 * 아이디 중복체크
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "admin/checkId" , method = RequestMethod.POST)
	public ModelAndView checkId(HttpServletRequest request,
			HttpServletResponse response,
			ModelMap modelMap) throws Exception {

		ModelAndView view = new ModelAndView("jsonView");
		BrbMap<Object, Object> dMap	= RequestParameterUtil.getParameterMap(request);
		BrbMap<Object, Object> rMap = null;

		String useYn ="";
		try{
			rMap = adminService.checkId(dMap);
		} catch(Exception e){
			e.printStackTrace();
		}

		useYn = rMap.get("USE_YN").toString();
		view.addObject("useYn", useYn);
		view.addObject("checkYn", "Y");

		return view;
	}

	/**
	 * 비밀번호 변경
	 * @param param
	 * @return
	 * @throws Exception
	 */
	@RequestMapping(value = "admin/changePwdProc" , method = RequestMethod.POST)
	public ModelAndView changePwdProc(HttpServletRequest request,
			HttpServletResponse response,
			ModelMap modelMap) throws Exception {

		ModelAndView view = new ModelAndView("jsonView");
		BrbMap<Object, Object> dMap	= RequestParameterUtil.getParameterMap(request);
		dMap.put("adm_pwd",aes256.aesEncode(dMap.getString("adm_pwd")));

		HttpSession session = request.getSession(false);
		String reg_adm_sq = session.getAttribute("ADM_SQ").toString();

		dMap.put("upt_adm_sq", reg_adm_sq); //수정 관리자고유번호
		int cnt = 0;
		try{
			cnt = adminService.changePwd(dMap);
			//action log
	        commonService.addAdminActLog(request);
		} catch(Exception e){
			e.printStackTrace();
		}

		view.addObject("cnt", cnt);

		return view;
	}



}
