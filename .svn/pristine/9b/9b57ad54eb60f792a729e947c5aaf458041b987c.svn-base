var sDate;
var eDate;
$(function(){
	var date = new Date();
	var year = date.getFullYear();
	var month = date.getMonth() + 1;
	var day = date.getDate();
	if (month < 10) {
		month = "0" + month.toString();
	}
	if (day < 10) {
		day = "0" + day.toString();
	}
	sDate = year + "-" + month + "-01";
	eDate = year + "-" + month + "-" + day;
	$("#startDate").val(sDate);
	$("#endDate").val(eDate);

	$("#layerPopup2").draggable();
	$(".sel1").hide();
	$(".sel2").hide();

	$("#cls1").click(function(){
		$(".sel2").hide();
		$(".sel1").hide();
		$(".stat1").show();
		$(".stat2").show();
		$("#statSearch1").show();
		$("#container1").attr("style", "width: 600px; height: 350px; margin: 0 auto; float:left; margin-left:80px; z-index:-1;");
		$("#container4").attr("style","width: 600px; height: 350px; margin: 0 auto; float:left; margin-left:30px; margin-top:50px;");
		$(".init").val("");
		$("#startDate").val(sDate);
		$("#endDate").val(eDate);
		ch1();
		ch4();
	});

	$("#cls2").click(function(){
		$(".sel2").hide();
		$(".sel1").show();
		$(".stat1").hide();
		$("#statSearch1").hide();
		$("#container1").attr("style","height:700px; width:1200px; margin: 0 auto; float:left; margin-left:80px; z-index:-1;");
		$(".init").val("");
		$("#startDate").val(sDate);
		$("#endDate").val(eDate);
		ch1();
		$("#container1").show();
	});

	$("#cls3").click(function(){
		$(".sel1").hide();
		$(".sel2").show();
		$(".stat2").hide();
		$("#statSearch1").hide();
		$("#container4").attr("style","height:700px; width:1200px; margin: 0 auto; float:left; margin-left:80px; z-index:-1;");
		$(".init").val("");
		$("#startDate").val(sDate);
		$("#endDate").val(eDate);
		ch4();
		$("#container4").show();
	});

	$("#btbSearch").click(function() {
		$("#dim-layer").show();
		$("#layerPopup2").show();
		$("#layerPopup2 a").focus();
		$("#btbsNm").val($("#siteNm").val());
		//grid2.fn_SearchGrid2();
	});
	$("#close").click(function() {
		$("#dim-layer").hide();
		$("#layerPopup2").hide();
	});

	//grid2.fn_initLoadGrid2();

	/* 검색 시작일 */
	$("#startDate").datepicker({
		changeMonth : true,
		onSelect : function(dateText, inst) {
			var dateArr = dateText.split("/");
			year = dateArr[2];
			month = dateArr[0];
			day = dateArr[1];
		}
	});

	/* 검색 끝일 */
	$("#endDate").datepicker({
		changeMonth : true,
		onSelect : function(dateText, inst) {
			var dateArr = dateText.split("/");
			year = dateArr[2];
			month = dateArr[0];
			day = dateArr[1];
		}
	});

	/* 당월 1일부터 당일 계산 */


	$("#statSearch1").click(function(){
		if(!dayDiffCheck($('#startDate').val(),$('#endDate').val(),'-')){
			return false ;
		};
		if(!dateDiffDay($('#startDate').val(),$('#endDate').val(),'-',60)){
			return false ;
		};
		ch1();
		ch2();
		ch3();
		ch4();
	});

	$("#statSearch2").click(function(){
		if(!dayDiffCheck($('#startDate').val(),$('#endDate').val(),'-')){
			return false ;
		};
		if(!dateDiffDay($('#startDate').val(),$('#endDate').val(),'-',60)){
			return false ;
		};
		ch1();
	});

	$("#statSearch3").click(function(){
		if(!dayDiffCheck($('#startDate').val(),$('#endDate').val(),'-')){
			return false ;
		};
		if(!dateDiffDay($('#startDate').val(),$('#endDate').val(),'-',60)){
			return false ;
		};
		ch4();
	});

	ch1();
	ch2();
	ch3();
	ch4();

	/*$("#addr_1").change(function(){
		$.ajax({
			url : "/mem/getSggList",
			data : {
				code : $(this).val()
			},
			type : "POST",
			success : function(result){
				var sHtml = "";
				sHtml += "<option value=''>전체</option>";
				for(var s=0; s<result.model.sggList.length; s++){
					sHtml += "<option value='"+result.model.sggList[s].CODE+"'>"+result.model.sggList[s].CODENAME+"</option>";
				}
				$("#addr_2").html(sHtml);
				$("#addr_3").html("<option value=''>전체</option");
			},
			error : function(e){
				alert("error : "+e);
			}
		});
	});

	$("#addr_2").change(function(){
		$.ajax({
			url : "/mem/getUmdList",
			data : {
				code : $(this).val()
			},
			type : "POST",
			success : function(result){
				var sHtml = "";
				sHtml += "<option value=''>전체</option>";
				for(var s=0; s<result.model.umdList.length; s++){
					sHtml += "<option value='"+result.model.umdList[s].CODE+"'>"+result.model.umdList[s].CODENAME+"</option>";
				}
				$("#addr_3").html(sHtml);
			},
			error : function(e){
				alert("erro : r"+e);
			}
		});
	});*/

	$(".tabmenu>li").eq(1).addClass("active");
});

function ch1(){
	$.ajax({
		url : "/mem/getAgeStat",
		type : "POST",
		data : {
			startDate : $("#startDate").val(),
			endDate : $("#endDate").val(),
			memGen : $("#memGen").val(),
			memKind : $("#memKind").val(),
			prodNm : $("#prodNm").val()
		},
		success : function(result){
			var r = result.model.cat;
			var r2 = result.model.data;
			chart1(r, r2);
		},
		error : function(e){
			alert("erro : r"+e);
		}
	});
}

function chart1(r, r2) {
	var chart = {
		type : 'column'
	};
	var title = {
		text : '연령별 회원통계'
	};
	var subtitle = {
		text : ''
	};
	var xAxis = {
		categories : r,
		crosshair : true
	};
	var yAxis = {
		min : 0,
		title : {
			text : '회원수'
		}
	};
	var tooltip = {
		headerFormat : '<span style = "font-size:12px">{point.key}</span><table>',
		pointFormat : '<td style = "padding:0"><b>{point.y}명</b></td></tr>',
		footerFormat : '</table>',
		shared : true,
		useHTML : true
	};
	var plotOptions = {
		column : {
			pointPadding : 0.2,
			borderWidth : 0
		}
	};
	var credits = {
		enabled : false
	};
	var series = [ {
		name : '연령별',
		data : r2
	} ];

	var json = {};
	json.chart = chart;
	json.title = title;
	json.subtitle = subtitle;
	json.tooltip = tooltip;
	json.xAxis = xAxis;
	json.yAxis = yAxis;
	json.series = series;
	json.plotOptions = plotOptions;
	json.credits = credits;
	$('#container1').highcharts(json);
}

function ch2(){
	$.ajax({
		url : "/mem/getGenStat",
		type : "POST",
		data : {
			startDate : $("#startDate").val(),
			endDate : $("#endDate").val()
		},
		success : function(result){
			var r = result.model.data;
			var c1 = parseInt(r.MALE);
			var c2 = parseInt(r.FEMALE);
			var c3 = parseInt(c1+c2);
			var r1 = parseInt((c1/c3*100).toFixed(1));
			var r2 = parseInt((c2/c3*100).toFixed(1));
			if(r1+r2 != 100){
				var temp = parseInt((100-(r1+r2))/2);
				r1 += temp;
				r2 += temp;
			}
			chart2(r1, r2, c1, c2);
		},
		error : function(e){
			alert("erro : r"+e);
		}
	});
}

function chart2(r1, r2, c1, c2) {
	var chart = {
		plotBackgroundColor : null,
		plotBorderWidth : null,
		plotShadow : false
	};
	var title = {
		text : '성별 회원통계'
	};
	var tooltip = {
		pointFormat : '{series.name}: <b>{point.percentage:.1f}%</b>'
	};
	var plotOptions = {
		pie : {
			allowPointSelect : true,
			cursor : 'pointer',

			dataLabels : {
				enabled : true,
				format : '<b>{point.name}</b>: {point.percentage:.1f}%',
				style : {
					color : (Highcharts.theme && Highcharts.theme.contrastTextColor)
							|| 'black'
				}
			}
		}
	};
	var series = [ {
		type : 'pie',
		name : '성별',
		data : [{
			name: '남'+c1+"명",
			y: r1
		},{
			name: '여'+c2+"명",
			y: r2
		}]
	} ];
	var json = {};
	json.chart = chart;
	json.title = title;
	json.tooltip = tooltip;
	json.series = series;
	json.plotOptions = plotOptions;
	$('#container2').highcharts(json);
}

function ch3(){
	$.ajax({
		url : "/mem/getProdStat",
		type : "POST",
		data : {
			startDate : $("#startDate").val(),
			endDate : $("#endDate").val()
		},
		success : function(result){
			var r = result.model.cat;
			var r2 = result.model.data;
			chart3(r, r2);
		},
		error : function(e){
			alert("erro : r"+e);
		}
	});
}

function chart3(r, r2) {
	var chart = {
		type : 'bar'
	};
	var title = {
		text : '제품별 회원통계'
	};
	var subtitle = {};
	var xAxis = {
		categories : r,
		title : {
			text : null
		}
	};
	var yAxis = {
		min : 0,
		labels : {
			overflow : 'justify'
		}
	};
	var tooltip = {
		valueSuffix : '명'
	};
	var plotOptions = {
		bar : {
			dataLabels : {
				enabled : true
			}
		}
	};
	var legend = {
		layout : 'vertical',
		align : 'right',
		verticalAlign : 'top',
		x : -40,
		y : 100,
		floating : true,
		borderWidth : 1,

		backgroundColor : ((Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF'),
		shadow : true
	};
	var credits = {
		enabled : false
	};
	var series = [ {
		name : "제품별",
		data : r2
	} ]

	var json = {};
	json.chart = chart;
	json.title = title;
	json.subtitle = subtitle;
	json.tooltip = tooltip;
	json.xAxis = xAxis;
	json.yAxis = yAxis;
	json.series = series;
	json.plotOptions = plotOptions;
	json.legend = legend;
	json.credits = credits;
	$('#container3').highcharts(json);
}

function ch4(){
	$.ajax({
		url : "/mem/getLocStat",
		type : "POST",
		data : {
			startDate : $("#startDate").val(),
			endDate : $("#endDate").val(),
			memGen : $("#memGen").val(),
			memKind : $("#memKind").val(),
			addr1 : $("#addr1").val()
		},
		success : function(result){
			var r = result.model.cat;
			var r2 = result.model.data;
			chart4(r, r2);
		},
		error : function(e){
			alert("erro : r"+e);
		}
	});
}

function chart4(r, r2){
	var chart = {
			type : 'bar'
		};
		var title = {
			text : '지역별 회원통계'
		};
		var subtitle = {};
		var xAxis = {
			categories : r,
			title : {
				text : null
			}
		};
		var yAxis = {
			min : 0,
			labels : {
				overflow : 'justify'
			}
		};
		var tooltip = {
			valueSuffix : '명'
		};
		var plotOptions = {
			bar : {
				dataLabels : {
					enabled : true
				}
			}
		};
		var legend = {
			layout : 'vertical',
			align : 'right',
			verticalAlign : 'top',
			x : -40,
			y : 100,
			floating : true,
			borderWidth : 1,

			backgroundColor : ((Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF'),
			shadow : true
		};
		var credits = {
			enabled : false
		};
		var series = [ {
			name : "지역별",
			data : r2
		} ]

		var json = {};
		json.chart = chart;
		json.title = title;
		json.subtitle = subtitle;
		json.tooltip = tooltip;
		json.xAxis = xAxis;
		json.yAxis = yAxis;
		json.series = series;
		json.plotOptions = plotOptions;
		json.legend = legend;
		json.credits = credits;
		$('#container4').highcharts(json);
}

/*var grid2 = {
		fn_initLoadGrid2:function(){
			$("#btb_list").jqGrid('GridUnload');
			$("#btb_list").jqGrid({
				caption:"B2B사이트 목록"
				,datatype : 'clientside'
				,height:300
				,width:250
				,rowNum:8
				,rownumbers : false
				,viewrecords: true
				,colNames:["번호","사이트명","회사명","사이트URL"]
				,colModel:[
			          {name:"ROWNUM", index:"ROWNUM" , sortable:false,	width:10, align:'center'},
			          {name:"BTBS_SITE_NM", index:"BTBS_SITE_NM", sortable:false,	width:40, align:'center'},
			          {name:"BTBS_COMP_NM", index:"BTBS_COMP_NM", sortable:false, width:40, align:'center'},
			          {name:"BTBS_DOMAIN", index:"BTBS_DOMAIN", sortable:false, width:40, align:'center'}
			          ]
				,pager:"#pager2"
		        ,sortname     : 'BTBS_SQ'     //초기화 될때 sort할 컬럼을 지정
		        ,sortorder    : 'asc'       //초기화정렬방법
				,jsonReader:{ repeatitems:false
					, id:"ROWNUM"
					, root: "rows"
					, page : "page"
					, total : "total"
					,records : "records" }

				,gridComplete : function(data,status) {
				}
				,recordpos:'right'
				,gridview: true
				,emptyrecords :" 등록된 데이터가 없습니다."
		    	,loadError:function(xhr, status, error) {
		    	}
		    	,onSelectRow   : function(rowid, status, e) {
			     }

			}).trigger('reloadGrid');

		}
		,fn_SearchGrid2:function(){
			$("#btb_list").jqGrid( 'GridUnload' );
			$("#btb_list").jqGrid({
				url:"/mem/btbsSearch"
				,caption:"B2B사이트 목록"
				,datatype 	   : 'json'
			    ,mtype         : 'POST'
		    	, postData	   : {
		        	btbsNm : $("#btbsNm").val()
		        }
				,height:300
				,width:250
				,rowNum:8
				,rownumbers : false
				,viewrecords: true
				,colNames:["번호","사이트명","회사명","사이트URL"]
				,colModel:[
				           {name:"ROWNUM", index:"ROWNUM" , sortable:true,	width:10, align:'center'},
					          {name:"BTBS_SITE_NM", index:"BTBS_SITE_NM", sortable:false,	width:40, align:'center'},
					          {name:"BTBS_COMP_NM", index:"BTBS_COMP_NM", sortable:false, width:40, align:'center'},
					          {name:"BTBS_DOMAIN", index:"BTBS_DOMAIN", sortable:false, width:40, align:'center'}
			          ]
				,pager:"#pager2"
		        ,sortname     : 'BTBS_SQ'     //초기화 될때 sort할 컬럼을 지정
		        ,sortorder    : 'asc'       //초기화정렬방법
				,jsonReader:{ repeatitems:false
					, id:"ROWNUM"
					, root: "rows"
					, page : "page"
					, total : "total"
					,records : "records" }

				,gridComplete : function(data,status) {
					var val = jQuery("#btb_list").jqGrid('getGridParam','records');
					$("#totalCnt").html(val);
				}
				,recordpos:'right'
				,gridview: true
				,emptyrecords :" 등록된 데이터가 없습니다."
		    	,loadError:function(xhr, status, error) {
		    	  alert(status + " : " +error);
		    	  console.log(status);
		    	  console.log(xhr);
		    	  console.log(error);
		    	}
		    	,ondblClickRow    : function(rowid, status, e) {
			    	var ret = jQuery("#btb_list").jqGrid('getRowData',rowid);
			    	$("#siteNm").val(ret.BTBS_SITE_NM);
			    	$("#dim-layer").hide();
					$("#layerPopup2").hide();
			     }
			}).trigger('reloadGrid');

			$("#btb_list").jqGrid(
					"navGrid",
					"#pager2",
					{search:false, edit:false, add:false, del:false},
					{closeAfterEdit:false, reloadAfterSubmit:false},
					{closeAfterAdd:false, reloadAfterSubmit:false},
					{reloadAfterSubmit:false}
			);
		}
	}*/