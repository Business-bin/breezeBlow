package com.brb.member.dao;

import java.util.List;

import javax.annotation.Resource;

import org.apache.ibatis.session.SqlSession;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.stereotype.Repository;

import com.brb.brbcom.common.collections.BrbMap;
import com.brb.member.model.MemVo;

@Repository("MemDao")
public class MemDao{

	@Autowired
	@Resource(name="sqlSessionTemplate")
	private SqlSession queryM;

	@Autowired
	@Resource(name="sqlSessionTemplate_s")
	private SqlSession queryS;


	@SuppressWarnings("unused")
	private static final Logger logger = LoggerFactory.getLogger(MemDao.class);

	/**
	 * 회원 리스트
	 * @param BrbMap
	 * @return List
	 * @throws DataAccessException
	 */
	@SuppressWarnings("rawtypes")
	public List getMemList(BrbMap<Object, Object> bMap)
			throws DataAccessException {
		return queryS.selectList("mem.getMemList", bMap);
	}

	/**
	 * 회원 총개수
	 * @param bMap
	 * @return Integer
	 * @throws DataAccessException
	 */
	public Integer getMemTotal(BrbMap<Object, Object> bMap)
			throws DataAccessException {
		return (Integer)queryS.selectOne("mem.getMemTotal", bMap);
	}

	/**
	 * 회원 상세
	 * @param MemVo
	 * @return BrbMap
	 * @throws DataAccessException
	 */
	@SuppressWarnings("unchecked")
	public BrbMap<Object, Object> getMem(MemVo bvo)
			throws DataAccessException {
		return (BrbMap<Object, Object>) queryS.selectOne("mem.getMem", bvo);
	}

	/**
	 * 회원 수정
	 * @param MemVo
	 * @return
	 * @throws DataAccessException
	 */
	public void updateMem(MemVo bvo)
			throws DataAccessException {
		queryM.update("mem.updateMem", bvo);
	}

	/**
	 * 회원 삭제
	 * @param MemVo
	 * @return
	 * @throws DataAccessException
	 */
	public void deleteMem(MemVo bvo)
			throws DataAccessException {
		queryM.delete("mem.deleteMem", bvo);
	}

	/**
	 * 회원 활동로그
	 * @param BrbMap<Object, Object>
	 * @return List<BrbMap<Object, Object>>
	 * @throws DataAccessException
	 */
	@SuppressWarnings("unchecked")
	public List<BrbMap<Object, Object>> getLogList(BrbMap<Object, Object> bMap)
			throws DataAccessException {
		return queryS.selectList("mem.getLogList", bMap);
	}

	/**
	 * 회원 총개수
	 * @param BrbMap<Object, Object>
	 * @return Integer
	 * @throws DataAccessException
	 */
	public Integer getLogTotal(BrbMap<Object, Object> bMap)
			throws DataAccessException {
		return (Integer)queryS.selectOne("mem.getLogTotal", bMap);
	}

	/**
	 *
	 * @param
	 * @return Li
	 * @throws DataAccessException
	 */
	@SuppressWarnings("unchecked")
	public List<BrbMap<Object, Object>> getHpList()
			throws DataAccessException {
		return queryS.selectList("mem.getHpList");
	}
}
